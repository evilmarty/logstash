input {
  exec {
    command => "ping -c 1 192.168.1.1"
    interval => 60
    tags => "ping"
    add_field => { "ref" => "local" }
  }
  exec {
    command => "ping -c 1 internode.on.net"
    interval => 60
    tags => "ping"
    add_field => { "ref" => "isp" }
  }
  exec {
    command => "ping -c 1 google.com"
    interval => 60
    tags => "ping"
    add_field => { "ref" => "external" }
  }

  exec {
    command => "internode usage"
    interval => 86400
    tags => [ "internet", "usage", "internode" ]
  }
}

filter {
  if "ping" in [tags] {
    grok {
      match => [ "message", "(?m)PING (%{HOSTNAME:host}|%{IP:host}) \(%{IP:ip_address}\): %{NUMBER:bytes_sent:int} data bytes%{GREEDYDATA}%{NUMBER:bytes_received:int} bytes from %{IP:ip_address}: icmp_seq=%{NUMBER:seq:int} ttl=%{NUMBER:ttl:int} time=%{NUMBER:duration:float} ms" ]
    }
  } else if "internode" in [tags] and "usage" in [tags] {
    grok {
      match => [ "message", "(?m)%{GREEDYDATA}\\n%{NUMBER:account_id}%{SPACE}|%{SPACE}%{NOTSPACE:type}%{SPACE}|%{SPACE}%{NUMBER:total}%{SPACE}|%{SPACE}%{NUMBER:quota}%{SPACE}|%{SPACE}%{NUMBER}%{SPACE}|%{SPACE}%{WORD}%{SPACE}|%{SPACE}%{DATE}" ]
    }
  }
}

output {
  stdout { codec => json }
  if "_grokparsefailure" not in [tags] {
    elasticsearch { host => "elasticsearch" }
  }
}
